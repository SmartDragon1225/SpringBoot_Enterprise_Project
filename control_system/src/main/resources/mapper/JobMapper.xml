<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.tian.control_system.mapper.JobMapper">

     <!--结果集-->
	<resultMap id="JobResult" type="com.tian.control_system.pojo.Job">
		<result property="jobId" column="job_id" />			
		<result property="name" column="name" />			
		<result property="remark" column="remark" />			
		<result property="departmentId" column="department_id" />			
		<result property="status" column="status" />			
	</resultMap>
	
    <!--新增数据-->
	<insert id="add" parameterType="com.tian.control_system.pojo.Job" useGeneratedKeys="true" keyProperty="jobId">
        insert into t_job (name, remark, department_id, status )
		values (#{name}, #{remark}, #{departmentId}, #{status})
	</insert>
	
	<!--通过主键Id查询-->
	<select id="findById" resultMap="JobResult" useCache="false">
		select * from t_job
		where job_id = #{_parameter}
	</select>

	<!--通过部门Id获取职位-->
	<select id="getJobByDeptId" resultMap="JobResult" >
		select *
		from t_job
		<where>
			<if test="deptId != null">
				department_id = #{deptId}
			</if>
		</where>
	</select>

	<select id="findJobIdByDeptId" resultType="int">
		SELECT job_id
		FROM t_job
		WHERE department_id = #{id}
	</select>

	<select id="findNameById" resultType="String">
		select name
		from t_job
		where job_id = #{id}
	</select>
	
	<!--获取所有的数据-->
	<select id="getAll" resultMap="JobResult" useCache="false">
        select * from t_job
		order by job_id desc
	</select>

	<!--分页查询职位-->
	<select id="findAllByPage" resultType="com.tian.control_system.pojo.vo.JobVo">
		select tj.job_id jobId,tj.name,tj.remark,td.name deptName,tdy.name statusName
		from t_job tj
		left join t_department td
		on tj.department_id = td.department_id
		left join t_dictionary tdy
		on tj.status = tdy.value and tdy.category = 'JOB_STATUS'
		<where>
			<if test="departmentId != null">
				tj.department_id = #{departmentId}
			</if>
			<if test="name != null and name != ''">
				and tj.name = #{name}
			</if>
		</where>
	</select>
	<select id="countAllByPage" resultType="int">
		select count(1)
		from t_job tj
		left join t_department td
		on tj.department_id = td.department_id
		left join t_dictionary tdy
		on tj.status = tdy.value and tdy.category = 'JOB_STATUS'
		<where>
			<if test="departmentId != null">
				tj.department_id = #{departmentId}
			</if>
			<if test="name != null and name != ''">
				and tj.name = #{name}
			</if>
		</where>
	</select>
	<!--分页查询结果-->
	<select id="findPage" resultType="map" useCache="false">
		select
		job_id jobId, name name, remark remark, department_id departmentId, status status 
		 from t_job
		<trim prefix="where" suffixOverrides="and">
			<if test="arg1.name!=null and arg1.name!=''">
					name=#{arg1.name, jdbcType=VARCHAR} and
			</if>
			<if test="arg1.remark!=null and arg1.remark!=''">
					remark=#{arg1.remark, jdbcType=VARCHAR} and
			</if>
			<if test="arg1.departmentId!=null and arg1.departmentId!=''">
			    	department_id=#{arg1.departmentId, jdbcType=INTEGER} and
			</if>
			<if test="arg1.status!=null and arg1.status!=''">
			    	status=#{arg1.status, jdbcType=INTEGER}
			</if>
		</trim>
        order by job_id desc
		limit #{arg0.firstNum},#{arg0.pageSize}
	</select>
	
	<!--分页查询统计-->
	<select id="countPage" resultType="int" useCache="false">
		select count(1) from t_job
		<trim prefix="where" suffixOverrides="and">
			<if test="arg1.name!=null and arg1.name!=''">
					name=#{arg1.name, jdbcType=VARCHAR} and
			</if>
			<if test="arg1.remark!=null and arg1.remark!=''">
					remark=#{arg1.remark, jdbcType=VARCHAR} and
			</if>
			<if test="arg1.departmentId!=null and arg1.departmentId!=''">
			    	department_id=#{arg1.departmentId, jdbcType=INTEGER} and
			</if>
			<if test="arg1.status!=null and arg1.status!=''">
			    	status=#{arg1.status, jdbcType=INTEGER}
			</if>
		</trim>		
	</select>
	
	<!--通过Id修改信息-->
	<update id="modifyById" parameterType="com.tian.control_system.pojo.Job">
		update t_job
		<trim prefix="set" suffixOverrides=",">
			<if test="name!=null and name!=''">
					name=#{name, jdbcType=VARCHAR},
			</if>
			<if test="remark!=null and remark!=''">
					remark=#{remark, jdbcType=VARCHAR},
			</if>
			<if test="departmentId!=null and departmentId!=''">
			    	department_id=#{departmentId, jdbcType=INTEGER},					
			</if>
			<if test="status!=null and status!=''">
			    	status=#{status, jdbcType=INTEGER}					
			</if>
		</trim>		
		WHERE job_id = #{jobId, jdbcType=INTEGER}
	</update>
	
	<!--通过Id删除信息-->
	<delete id="deleteById">
		delete from t_job
		where job_id =  #{_parameter}
	</delete>
	
	<!--通过信息条件删除-->
	<delete id="delete">
		delete from t_job
		<trim prefix="where " suffixOverrides="and">
			<if test="name!=null and name!=''">
					name=#{name, jdbcType=VARCHAR} and
			</if>
			<if test="remark!=null and remark!=''">
					remark=#{remark, jdbcType=VARCHAR} and
			</if>
			<if test="departmentId!=null and departmentId!=''">
			    	department_id=#{departmentId, jdbcType=INTEGER} and
			</if>
			<if test="status!=null and status!=''">
			    	status=#{status, jdbcType=INTEGER}
			</if>
		</trim>		
	</delete>

</mapper>